{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /api-test - GET - ::1","service":"homera-api","timestamp":"2025-06-04 23:34:03"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /api-test - GET - ::1","service":"homera-api","timestamp":"2025-06-04 23:34:03"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - OPTIONS - ::1","service":"homera-api","timestamp":"2025-06-04 23:42:39"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - OPTIONS - ::1","service":"homera-api","timestamp":"2025-06-04 23:42:41"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-04 23:45:38"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - GET - ::1","service":"homera-api","timestamp":"2025-06-04 23:50:06"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - GET - ::1","service":"homera-api","timestamp":"2025-06-04 23:50:10"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - GET - ::1","service":"homera-api","timestamp":"2025-06-04 23:50:11"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - GET - ::1","service":"homera-api","timestamp":"2025-06-04 23:50:11"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - GET - ::1","service":"homera-api","timestamp":"2025-06-04 23:50:12"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - GET - ::1","service":"homera-api","timestamp":"2025-06-04 23:50:19"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - GET - ::1","service":"homera-api","timestamp":"2025-06-04 23:57:41"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /bghome4.jpg - GET - ::1","service":"homera-api","timestamp":"2025-06-04 23:57:51"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /bghome4.jpg - GET - ::1","service":"homera-api","timestamp":"2025-06-05 00:03:04"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 00:04:47"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 00:04:48"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 00:04:51"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 00:08:08"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 00:08:10"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 00:24:39"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 00:24:40"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 00:26:54"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 00:26:56"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 00:27:45"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 00:27:48"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - GET - ::1","service":"homera-api","timestamp":"2025-06-05 00:29:16"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - GET - ::1","service":"homera-api","timestamp":"2025-06-05 07:49:00"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 07:53:15"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - GET - ::1","service":"homera-api","timestamp":"2025-06-05 07:58:17"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 08:00:07"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 08:33:29"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 09:10:20"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 09:10:25"}
{"level":"error","message":"500 - Cannot set property query of #<IncomingMessage> which has only a getter - /register - POST - ::1","service":"homera-api","timestamp":"2025-06-05 09:10:31"}
{"level":"error","message":"401 - Password salah. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-05 09:20:00"}
{"level":"error","message":"401 - Username tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-05 09:53:32"}
{"level":"error","message":"401 - Username tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:16:10"}
{"level":"error","message":"401 - Username tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:16:18"}
{"level":"error","message":"401 - Username tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:16:20"}
{"level":"error","message":"401 - Username tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:19:20"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:27:38"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:27:39"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:27:40"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:27:40"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:27:40"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:27:41"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:27:41"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:27:41"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:27:41"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:27:41"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:31:45"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - ::1","service":"homera-api","timestamp":"2025-06-06 02:32:22"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 02:33:22"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 02:33:23"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 02:33:24"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 02:40:04"}
{"level":"error","message":"401 - Password salah. - /login - POST - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 02:42:22"}
{"level":"error","message":"500 - await is not defined - /randompost - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 03:36:27"}
{"level":"error","message":"500 - await is not defined - /randompost - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 03:36:27"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:28:44\n\n  25 const portofolioService = {\n  26   // Untuk halaman Explore: ambil porto_id, uid, cover, kategori, created_at, dan user (uname, nama_lengkap)\n  27   getExplorePortofolios: async (whereClause) => {\n→ 28     const portos = await prisma.portofolio.findMany({\n           where: {\n             isdelete: false\n           },\n           orderBy: [\n             {\n               created_at: \"desc\"\n             }\n           ],\n           select: {\n             cover: true,\n             kategori: true,\n             created_at: true,\n             user: {\n               select: {\n                 uname: true,\n                 nama_lengkap: true,\n                 ~~~~~~~~~~~~\n         ?       uid?: true,\n         ?       password?: true,\n         ?       status?: true,\n         ?       email?: true,\n         ?       ppict?: true,\n         ?       location?: true,\n         ?       whatsapp?: true,\n         ?       instagram?: true,\n         ?       user_job?: true,\n         ?       user_desc?: true,\n         ?       created_at?: true,\n         ?       isdelete?: true,\n         ?       pending_delete_until?: true,\n         ?       portofolio?: true,\n         ?       refreshToken?: true,\n         ?       requestStatuses?: true,\n         ?       testimonial_diberikan?: true,\n         ?       testimonial_diterima?: true,\n         ?       _count?: true\n               }\n             }\n           }\n         })\n\nUnknown field `nama_lengkap` for select statement on model `user`. Available options are marked with ?. - /portofolio/explore/all - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 07:15:05"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:28:44\n\n  25 const portofolioService = {\n  26   // Untuk halaman Explore: ambil porto_id, uid, cover, kategori, created_at, dan user (uname, nama_lengkap)\n  27   getExplorePortofolios: async (whereClause) => {\n→ 28     const portos = await prisma.portofolio.findMany({\n           where: {\n             isdelete: false\n           },\n           orderBy: [\n             {\n               created_at: \"desc\"\n             }\n           ],\n           select: {\n             cover: true,\n             kategori: true,\n             created_at: true,\n             user: {\n               select: {\n                 uname: true,\n                 nama_lengkap: true,\n                 ~~~~~~~~~~~~\n         ?       uid?: true,\n         ?       password?: true,\n         ?       status?: true,\n         ?       email?: true,\n         ?       ppict?: true,\n         ?       location?: true,\n         ?       whatsapp?: true,\n         ?       instagram?: true,\n         ?       user_job?: true,\n         ?       user_desc?: true,\n         ?       created_at?: true,\n         ?       isdelete?: true,\n         ?       pending_delete_until?: true,\n         ?       portofolio?: true,\n         ?       refreshToken?: true,\n         ?       requestStatuses?: true,\n         ?       testimonial_diberikan?: true,\n         ?       testimonial_diterima?: true,\n         ?       _count?: true\n               }\n             }\n           }\n         })\n\nUnknown field `nama_lengkap` for select statement on model `user`. Available options are marked with ?. - /portofolio/explore/all - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 07:15:05"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:28:44\n\n  25 const portofolioService = {\n  26   // Untuk halaman Explore: ambil porto_id, uid, cover, kategori, created_at, dan user (uname, nama_lengkap)\n  27   getExplorePortofolios: async (whereClause) => {\n→ 28     const portos = await prisma.portofolio.findMany({\n           where: {\n             isdelete: false,\n             kategori: \"living\"\n           },\n           orderBy: [\n             {\n               created_at: \"desc\"\n             }\n           ],\n           select: {\n             cover: true,\n             kategori: true,\n             created_at: true,\n             user: {\n               select: {\n                 uname: true,\n                 nama_lengkap: true,\n                 ~~~~~~~~~~~~\n         ?       uid?: true,\n         ?       password?: true,\n         ?       status?: true,\n         ?       email?: true,\n         ?       ppict?: true,\n         ?       location?: true,\n         ?       whatsapp?: true,\n         ?       instagram?: true,\n         ?       user_job?: true,\n         ?       user_desc?: true,\n         ?       created_at?: true,\n         ?       isdelete?: true,\n         ?       pending_delete_until?: true,\n         ?       portofolio?: true,\n         ?       refreshToken?: true,\n         ?       requestStatuses?: true,\n         ?       testimonial_diberikan?: true,\n         ?       testimonial_diterima?: true,\n         ?       _count?: true\n               }\n             }\n           }\n         })\n\nUnknown field `nama_lengkap` for select statement on model `user`. Available options are marked with ?. - /portofolio/explore/living - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 07:15:10"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:28:44\n\n  25 const portofolioService = {\n  26   // Untuk halaman Explore: ambil porto_id, uid, cover, kategori, created_at, dan user (uname, nama_lengkap)\n  27   getExplorePortofolios: async (whereClause) => {\n→ 28     const portos = await prisma.portofolio.findMany({\n           where: {\n             isdelete: false\n           },\n           orderBy: [\n             {\n               created_at: \"desc\"\n             }\n           ],\n           select: {\n           ~~~~~~\n             cover: true,\n             kategori: true,\n             created_at: true\n           },\n           include: {\n           ~~~~~~~\n             user: {\n               select: {\n                 uname: true,\n                 nama_lengkap: true\n               }\n             }\n           }\n         })\n\nPlease either use `include` or `select`, but not both at the same time. - /portofolio/explore/all - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 07:18:08"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:28:44\n\n  25 const portofolioService = {\n  26   // Untuk halaman Explore: ambil porto_id, uid, cover, kategori, created_at, dan user (uname, nama_lengkap)\n  27   getExplorePortofolios: async (whereClause) => {\n→ 28     const portos = await prisma.portofolio.findMany({\n           where: {\n             isdelete: false\n           },\n           orderBy: [\n             {\n               created_at: \"desc\"\n             }\n           ],\n           select: {\n           ~~~~~~\n             cover: true,\n             kategori: true,\n             created_at: true\n           },\n           include: {\n           ~~~~~~~\n             user: {\n               select: {\n                 uname: true,\n                 nama_lengkap: true\n               }\n             }\n           }\n         })\n\nPlease either use `include` or `select`, but not both at the same time. - /portofolio/explore/all - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 07:18:08"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:28:44\n\n  25 const portofolioService = {\n  26   // Untuk halaman Explore: ambil porto_id, uid, cover, kategori, created_at, dan user (uname, nama_lengkap)\n  27   getExplorePortofolios: async (whereClause) => {\n→ 28     const portos = await prisma.portofolio.findMany({\n           where: {\n             isdelete: false\n           },\n           orderBy: [\n             {\n               created_at: \"desc\"\n             }\n           ],\n           select: {\n           ~~~~~~\n             cover: true,\n             kategori: true,\n             created_at: true\n           },\n           include: {\n           ~~~~~~~\n             user: {\n               select: {\n                 uname: true,\n                 nama_lengkap: true\n               }\n             }\n           }\n         })\n\nPlease either use `include` or `select`, but not both at the same time. - /portofolio/explore/all - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 07:19:51"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:28:44\n\n  25 const portofolioService = {\n  26   // Untuk halaman Explore: ambil porto_id, uid, cover, kategori, created_at, dan user (uname, nama_lengkap)\n  27   getExplorePortofolios: async (whereClause) => {\n→ 28     const portos = await prisma.portofolio.findMany({\n           where: {\n             isdelete: false\n           },\n           orderBy: [\n             {\n               created_at: \"desc\"\n             }\n           ],\n           select: {\n           ~~~~~~\n             cover: true,\n             kategori: true,\n             created_at: true\n           },\n           include: {\n           ~~~~~~~\n             user: {\n               select: {\n                 uname: true,\n                 nama_lengkap: true\n               }\n             }\n           }\n         })\n\nPlease either use `include` or `select`, but not both at the same time. - /portofolio/explore/all - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 07:19:51"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:28:44\n\n  25 const portofolioService = {\n  26   // Untuk halaman Explore: ambil porto_id, uid, cover, kategori, created_at, dan user (uname, nama_lengkap)\n  27   getExplorePortofolios: async (whereClause) => {\n→ 28     const portos = await prisma.portofolio.findMany({\n           where: {\n             isdelete: false,\n             kategori: \"living\"\n           },\n           orderBy: [\n             {\n               created_at: \"desc\"\n             }\n           ],\n           select: {\n           ~~~~~~\n             cover: true,\n             kategori: true,\n             created_at: true\n           },\n           include: {\n           ~~~~~~~\n             user: {\n               select: {\n                 uname: true,\n                 nama_lengkap: true\n               }\n             }\n           }\n         })\n\nPlease either use `include` or `select`, but not both at the same time. - /portofolio/explore/living - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 07:19:53"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findUnique()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:143:43\n\n  140 \n  141 // Get detail portofolio berdasarkan ID\n  142 getPortofolioById: async (portoId) => {\n→ 143   const porto = await prisma.portofolio.findUnique({\n          where: {\n        +   porto_id: Int\n          },\n          include: {\n            user: true,\n            furnitur: true\n          }\n        })\n\nArgument `porto_id` is missing. - /portofolio/home-portos - GET - ::1","service":"homera-api","timestamp":"2025-06-06 08:40:49"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findUnique()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:143:43\n\n  140 \n  141 // Get detail portofolio berdasarkan ID\n  142 getPortofolioById: async (portoId) => {\n→ 143   const porto = await prisma.portofolio.findUnique({\n          where: {\n        +   porto_id: Int\n          },\n          include: {\n            user: true,\n            furnitur: true\n          }\n        })\n\nArgument `porto_id` is missing. - /portofolio/home-portos - GET - ::1","service":"homera-api","timestamp":"2025-06-06 08:40:49"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findUnique()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:143:43\n\n  140 \n  141 // Get detail portofolio berdasarkan ID\n  142 getPortofolioById: async (portoId) => {\n→ 143   const porto = await prisma.portofolio.findUnique({\n          where: {\n        +   porto_id: Int\n          },\n          include: {\n            user: true,\n            furnitur: true\n          }\n        })\n\nArgument `porto_id` is missing. - /portofolio/home-portos - GET - ::1","service":"homera-api","timestamp":"2025-06-06 08:42:18"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findUnique()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:143:43\n\n  140 \n  141 // Get detail portofolio berdasarkan ID\n  142 getPortofolioById: async (portoId) => {\n→ 143   const porto = await prisma.portofolio.findUnique({\n          where: {\n        +   porto_id: Int\n          },\n          include: {\n            user: true,\n            furnitur: true\n          }\n        })\n\nArgument `porto_id` is missing. - /portofolio/home-portos - GET - ::1","service":"homera-api","timestamp":"2025-06-06 08:42:18"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findUnique()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:143:43\n\n  140 \n  141 // Get detail portofolio berdasarkan ID\n  142 getPortofolioById: async (portoId) => {\n→ 143   const porto = await prisma.portofolio.findUnique({\n          where: {\n        +   porto_id: Int\n          },\n          include: {\n            user: true,\n            furnitur: true\n          }\n        })\n\nArgument `porto_id` is missing. - /portofolio/home-portos - GET - ::1","service":"homera-api","timestamp":"2025-06-06 08:43:36"}
{"level":"error","message":"400 - \nInvalid `prisma.portofolio.findUnique()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\portofolioservice.js:143:43\n\n  140 \n  141 // Get detail portofolio berdasarkan ID\n  142 getPortofolioById: async (portoId) => {\n→ 143   const porto = await prisma.portofolio.findUnique({\n          where: {\n        +   porto_id: Int\n          },\n          include: {\n            user: true,\n            furnitur: true\n          }\n        })\n\nArgument `porto_id` is missing. - /portofolio/home-portos - GET - ::1","service":"homera-api","timestamp":"2025-06-06 08:43:36"}
{"level":"error","message":"500 - Cannot find module '../prisma/client'\nRequire stack:\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\controller\\usercontrol.js\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\routes\\userroute.js\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\index.js - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 11:35:08"}
{"level":"error","message":"500 - Cannot find module '../prisma/client'\nRequire stack:\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\controller\\usercontrol.js\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\routes\\userroute.js\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\index.js - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 11:35:08"}
{"level":"error","message":"500 - Cannot find module '../prisma/client'\nRequire stack:\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\controller\\usercontrol.js\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\routes\\userroute.js\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\index.js - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 11:41:03"}
{"level":"error","message":"500 - Cannot find module '../prisma/client'\nRequire stack:\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\controller\\usercontrol.js\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\routes\\userroute.js\n- C:\\Belajar\\Project_JS\\web_homera\\Backend\\index.js - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 11:41:03"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:53:19\n\n  50 getDesignerListWithPortfolioCount: async (page = 1, limit = 6) => {\n  51   const skip = (page - 1) * limit;\n  52   const [designers, total] = await Promise.all([\n→ 53     prisma.user.findMany({\n           where: {\n             status: \"Post\",\n             isdelete: false,\n             portofolio: {\n               some: {\n                 isdelete: false\n               }\n             }\n           },\n           select: {\n             uid: true,\n             uname: true,\n             ppict: true,\n             _count: {\n               select: {\n                 portofolio: {\n                   where: {\n                     isdelete: false\n                   }\n                 }\n               }\n             }\n           },\n           orderBy: [\n             {\n               _count: {\n                 portofolio: \"desc\"\n               }\n             },\n             {\n               uid: \"asc\"\n             }\n           ],\n           skip: 0,\n           take: 6\n         })\n\nUnknown argument `_count`. Available options are marked with ?. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:12:29"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:53:19\n\n  50 getDesignerListWithPortfolioCount: async (page = 1, limit = 6) => {\n  51   const skip = (page - 1) * limit;\n  52   const [designers, total] = await Promise.all([\n→ 53     prisma.user.findMany({\n           where: {\n             status: \"Post\",\n             isdelete: false,\n             portofolio: {\n               some: {\n                 isdelete: false\n               }\n             }\n           },\n           select: {\n             uid: true,\n             uname: true,\n             ppict: true,\n             _count: {\n               select: {\n                 portofolio: {\n                   where: {\n                     isdelete: false\n                   }\n                 }\n               }\n             }\n           },\n           orderBy: [\n             {\n               _count: {\n                 portofolio: \"desc\"\n               }\n             },\n             {\n               uid: \"asc\"\n             }\n           ],\n           skip: 0,\n           take: 6\n         })\n\nUnknown argument `_count`. Available options are marked with ?. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:12:29"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:53:19\n\n  50 getDesignerListWithPortfolioCount: async (page = 1, limit = 6) => {\n  51   const skip = (page - 1) * limit;\n  52   const [designers, total] = await Promise.all([\n→ 53     prisma.user.findMany({\n           where: {\n             status: \"Post\",\n             isdelete: false,\n             portofolio: {\n               some: {\n                 isdelete: false\n               }\n             }\n           },\n           select: {\n             uid: true,\n             uname: true,\n             ppict: true,\n             _count: {\n               select: {\n                 portofolio: {\n                   where: {\n                     isdelete: false\n                   }\n                 }\n               }\n             }\n           },\n           orderBy: [\n             {\n               _count: {\n                 portofolio: \"desc\"\n               }\n             },\n             {\n               uid: \"asc\"\n             }\n           ],\n           skip: 0,\n           take: 6\n         })\n\nUnknown argument `_count`. Available options are marked with ?. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:16:20"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:53:19\n\n  50 getDesignerListWithPortfolioCount: async (page = 1, limit = 6) => {\n  51   const skip = (page - 1) * limit;\n  52   const [designers, total] = await Promise.all([\n→ 53     prisma.user.findMany({\n           where: {\n             status: \"Post\",\n             isdelete: false,\n             portofolio: {\n               some: {\n                 isdelete: false\n               }\n             }\n           },\n           select: {\n             uid: true,\n             uname: true,\n             ppict: true,\n             _count: {\n               select: {\n                 portofolio: {\n                   where: {\n                     isdelete: false\n                   }\n                 }\n               }\n             }\n           },\n           orderBy: [\n             {\n               _count: {\n                 portofolio: \"desc\"\n               }\n             },\n             {\n               uid: \"asc\"\n             }\n           ],\n           skip: 0,\n           take: 6\n         })\n\nUnknown argument `_count`. Available options are marked with ?. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:16:20"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:67:21\n\n  64 \n  65 // Query utama\n  66 const [designers, total] = await Promise.all([\n→ 67   prisma.user.findMany({\n         where: {\n           status: \"Post\",\n           isdelete: false,\n           portofolio: {\n             some: {\n               isdelete: false\n             }\n           }\n         },\n         select: {\n           uid: true,\n           uname: true,\n           ppict: true,\n           _count: {\n             select: {\n               portofolio: {\n                 where: {\n                   isdelete: false\n                 }\n               }\n             }\n           }\n         },\n         orderBy: [\n           {\n             _count: {\n               portofolio: \"desc\"\n             }\n           },\n           {\n             uid: \"asc\"\n           }\n         ],\n         skip: 0,\n         take: 6\n       })\n\nUnknown argument `_count`. Available options are marked with ?. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:20:50"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:67:21\n\n  64 \n  65 // Query utama\n  66 const [designers, total] = await Promise.all([\n→ 67   prisma.user.findMany({\n         where: {\n           status: \"Post\",\n           isdelete: false,\n           portofolio: {\n             some: {\n               isdelete: false\n             }\n           }\n         },\n         select: {\n           uid: true,\n           uname: true,\n           ppict: true,\n           _count: {\n             select: {\n               portofolio: {\n                 where: {\n                   isdelete: false\n                 }\n               }\n             }\n           }\n         },\n         orderBy: [\n           {\n             _count: {\n               portofolio: \"desc\"\n             }\n           },\n           {\n             uid: \"asc\"\n           }\n         ],\n         skip: 0,\n         take: 6\n       })\n\nUnknown argument `_count`. Available options are marked with ?. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:20:50"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:81:21\n\n  78 \n  79 // Query utama\n  80 const [designers, total] = await Promise.all([\n→ 81   prisma.user.findMany({\n         where: {\n           status: \"Post\",\n           isdelete: false,\n           portofolio: {\n             some: {\n               isdelete: false\n             }\n           }\n         },\n         select: {\n           uid: true,\n           uname: true,\n           ppict: true,\n           _count: {\n             select: {\n               portofolio: {\n                 where: {\n                   isdelete: false\n                 }\n               }\n             }\n           }\n         },\n         orderBy: [\n           {\n             _count: {\n               portofolio: \"desc\"\n             }\n           },\n           {\n             uid: \"asc\"\n           }\n         ],\n         skip: 0,\n         take: 6\n       })\n\nUnknown argument `_count`. Available options are marked with ?. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:22:43"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:81:21\n\n  78 \n  79 // Query utama\n  80 const [designers, total] = await Promise.all([\n→ 81   prisma.user.findMany({\n         where: {\n           status: \"Post\",\n           isdelete: false,\n           portofolio: {\n             some: {\n               isdelete: false\n             }\n           }\n         },\n         select: {\n           uid: true,\n           uname: true,\n           ppict: true,\n           _count: {\n             select: {\n               portofolio: {\n                 where: {\n                   isdelete: false\n                 }\n               }\n             }\n           }\n         },\n         orderBy: [\n           {\n             _count: {\n               portofolio: \"desc\"\n             }\n           },\n           {\n             uid: \"asc\"\n           }\n         ],\n         skip: 0,\n         take: 6\n       })\n\nUnknown argument `_count`. Available options are marked with ?. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:22:43"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:81:21\n\n  78 \n  79 // Query utama\n  80 const [designers, total] = await Promise.all([\n→ 81   prisma.user.findMany({\n         where: {\n           status: \"Post\",\n           isdelete: false,\n           portofolio: {\n             some: {\n               isdelete: false\n             }\n           }\n         },\n         select: {\n           uid: true,\n           uname: true,\n           ppict: true,\n           _count: {\n             select: {\n               portofolio: {\n                 where: {\n                   isdelete: false\n                 }\n               }\n             }\n           }\n         },\n         orderBy: [\n           {\n             _count: {\n               portofolio: \"desc\"\n             }\n           },\n           {\n             uid: \"asc\"\n           }\n         ],\n         skip: 0,\n         take: 6\n       })\n\nUnknown argument `_count`. Available options are marked with ?. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:22:49"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:81:21\n\n  78 \n  79 // Query utama\n  80 const [designers, total] = await Promise.all([\n→ 81   prisma.user.findMany({\n         where: {\n           status: \"Post\",\n           isdelete: false,\n           portofolio: {\n             some: {\n               isdelete: false\n             }\n           }\n         },\n         select: {\n           uid: true,\n           uname: true,\n           ppict: true,\n           _count: {\n             select: {\n               portofolio: {\n                 where: {\n                   isdelete: false\n                 }\n               }\n             }\n           }\n         },\n         orderBy: [\n           {\n             _count: {\n               portofolio: \"desc\"\n             }\n           },\n           {\n             uid: \"asc\"\n           }\n         ],\n         skip: 0,\n         take: 6\n       })\n\nUnknown argument `_count`. Available options are marked with ?. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:22:49"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:87:21\n\n  84 };\n  85 \n  86 const [designers, total] = await Promise.all([\n→ 87   prisma.user.findMany({\n         where: {\n           status: \"Post\",\n           isdelete: false,\n           portofolio: {\n             some: {\n               isdelete: false\n             }\n           }\n         },\n         select: {\n           uid: true,\n           uname: true,\n           ppict: true,\n           _count: {\n             select: {\n               portofolio: {\n                 where: {\n                   isdelete: false\n                 }\n               }\n             }\n           }\n         },\n         orderBy: [\n           {\n             _count: {\n               portofolio: \"desc\"\n             }\n           },\n           {\n             uid: \"asc\"\n           }\n         ],\n         skip: 0,\n         take: 6\n       })\n\nUnknown argument `_count`. Available options are marked with ?. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:34:00"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:87:21\n\n  84 };\n  85 \n  86 const [designers, total] = await Promise.all([\n→ 87   prisma.user.findMany({\n         where: {\n           status: \"Post\",\n           isdelete: false,\n           portofolio: {\n             some: {\n               isdelete: false\n             }\n           }\n         },\n         select: {\n           uid: true,\n           uname: true,\n           ppict: true,\n           _count: {\n             select: {\n               portofolio: {\n                 where: {\n                   isdelete: false\n                 }\n               }\n             }\n           }\n         },\n         orderBy: [\n           {\n             _count: {\n               portofolio: \"desc\"\n             }\n           },\n           {\n             uid: \"asc\"\n           }\n         ],\n         skip: 0,\n         take: 6\n       })\n\nUnknown argument `_count`. Available options are marked with ?. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:34:00"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:87:21\n\n  84 };\n  85 \n  86 const [designers, total] = await Promise.all([\n→ 87   prisma.user.findMany({\n         where: {\n           status: \"Post\",\n           isdelete: false,\n           portofolio: {\n             some: {\n               isdelete: false\n             }\n           }\n         },\n         select: {\n         ~~~~~~\n           uid: true,\n           uname: true,\n           ppict: true\n         },\n         include: {\n         ~~~~~~~\n           portofolio: {\n             where: {\n               isdelete: false\n             },\n             select: {\n               porto_id: true\n             }\n           }\n         },\n         orderBy: [\n           {\n             portofolio: {\n               _count: \"desc\"\n             }\n           },\n           {\n             uid: \"asc\"\n           }\n         ],\n         skip: 0,\n         take: 6\n       })\n\nPlease either use `include` or `select`, but not both at the same time. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:38:39"}
{"level":"error","message":"500 - \nInvalid `prisma.user.findMany()` invocation in\nC:\\Belajar\\Project_JS\\web_homera\\Backend\\services\\userservice.js:87:21\n\n  84 };\n  85 \n  86 const [designers, total] = await Promise.all([\n→ 87   prisma.user.findMany({\n         where: {\n           status: \"Post\",\n           isdelete: false,\n           portofolio: {\n             some: {\n               isdelete: false\n             }\n           }\n         },\n         select: {\n         ~~~~~~\n           uid: true,\n           uname: true,\n           ppict: true\n         },\n         include: {\n         ~~~~~~~\n           portofolio: {\n             where: {\n               isdelete: false\n             },\n             select: {\n               porto_id: true\n             }\n           }\n         },\n         orderBy: [\n           {\n             portofolio: {\n               _count: \"desc\"\n             }\n           },\n           {\n             uid: \"asc\"\n           }\n         ],\n         skip: 0,\n         take: 6\n       })\n\nPlease either use `include` or `select`, but not both at the same time. - /designer-list?page=1&limit=6 - GET - ::1","service":"homera-api","timestamp":"2025-06-06 12:38:39"}
{"level":"error","message":"400 - Cannot read properties of undefined (reading 'portofolio') - /portofolio/user/1b93ffbb-ed73-4438-9275-f076e6dba2d3 - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 16:44:58"}
{"level":"error","message":"400 - Cannot read properties of undefined (reading 'portofolio') - /portofolio/user/1b93ffbb-ed73-4438-9275-f076e6dba2d3 - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 16:44:58"}
{"level":"error","message":"400 - portofolioService.getPortofoliosByUser is not a function - /portofolio/user/1b93ffbb-ed73-4438-9275-f076e6dba2d3 - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 16:45:41"}
{"level":"error","message":"400 - portofolioService.getPortofoliosByUser is not a function - /portofolio/user/1b93ffbb-ed73-4438-9275-f076e6dba2d3 - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 16:45:41"}
{"level":"error","message":"401 - Token tidak valid - /profile/ - GET - ::1","service":"homera-api","timestamp":"2025-06-06 18:44:00"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 19:12:17"}
{"level":"error","message":"401 - Username/email tidak ditemukan. - /login - POST - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 19:12:24"}
{"level":"error","message":"401 - Akses ditolak. Token tidak disediakan - /profile - GET - 127.0.0.1","service":"homera-api","timestamp":"2025-06-06 19:42:43"}
