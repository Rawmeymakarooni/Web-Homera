// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  uid        Int      @id @default(autoincrement())
  uname      String   @unique
  password   String
  status     String   @default("View")
  email      String   @unique
  ppict      String?  @default("profil/Default.JPG")
  location   String?
  whatsapp   String?
  instagram  String?
  user_job   String?
  user_desc  String?
  created_at DateTime @default(now())

  portofolio portofolio[]

  testimonial_diberikan testimonial[] @relation("Pemberi")
  testimonial_diterima  testimonial[] @relation("Penerima")
}

model testimonial {
  testimonial_id Int      @id @default(autoincrement())
  pemberi_uid    Int
  penerima_uid   Int
  isi_komentar   String
  created_at     DateTime @default(now())

  // relasi ke user sebagai pemberi dan penerima
  pemberi  user @relation("Pemberi", fields: [pemberi_uid], references: [uid], onDelete: Cascade)
  penerima user @relation("Penerima", fields: [penerima_uid], references: [uid], onDelete: Cascade)
}

model portofolio {
  porto_id   Int      @id @default(autoincrement())
  uid        Int
  cover      String?
  judul      String
  kategori   String
  created_at DateTime @default(now())

  user     user       @relation(fields: [uid], references: [uid], onDelete: Cascade)
  furnitur furnitur[]
}

model furnitur {
  furnitur_id         Int     @id @default(autoincrement())
  porto_id            Int
  nama_furnitur       String
  foto_furnitur       String?
  keterangan_furnitur String?

  portofolio portofolio @relation(fields: [porto_id], references: [porto_id], onDelete: Cascade)
}
